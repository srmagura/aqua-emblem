// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window._status = {};

  _status.Status = (function() {
    function Status() {}

    Status.prototype.newTurn = function() {
      this.turns--;
      return this.turns > 0;
    };

    Status.prototype.getEl = function() {
      var clsName, div, img, span;
      div = $('<div></div>').addClass('status');
      clsName = _util.getFunctionName(this.constructor).toLowerCase();
      div.addClass('status-' + clsName);
      img = $('<img/>').attr('src', this.getImagePath());
      span = $('<span></span>').html(this.text);
      div.append(img).append(span);
      return div;
    };

    Status.prototype.getImagePath = function() {
      return 'images/' + this.imagePath;
    };

    return Status;

  })();

  _status.Defend = (function(_super) {
    __extends(Defend, _super);

    function Defend() {
      this.text = 'Defend';
      this.imagePath = 'skills/defend.png';
      this.turns = 1;
    }

    return Defend;

  })(_status.Status);

  _status.Buff = (function(_super) {
    __extends(Buff, _super);

    function Buff(stat, value) {
      this.stat = stat;
      this.value = value;
      this.imagePath = 'up_arrow.png';
      this.turns = this.value;
      this.updateText();
    }

    Buff.prototype.updateText = function() {
      this.text = "<span class='stat'>" + (this.stat.toUpperCase()) + "</span>";
      return this.text += ' +' + this.value;
    };

    Buff.prototype.newTurn = function() {
      this.value--;
      this.updateText();
      return Buff.__super__.newTurn.call(this);
    };

    return Buff;

  })(_status.Status);

}).call(this);
