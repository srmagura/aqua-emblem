// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _cui.ActionMenu = (function() {
    function ActionMenu(ui) {
      this.ui = ui;
      this.menu = $('.action-menu');
    }

    ActionMenu.prototype.init = function(unit, menuItems) {
      var el, item, k, _i, _len;
      if (unit != null) {
        this.unit = unit;
      }
      if (menuItems != null) {
        this.menuItems = menuItems;
        this.menu.html('');
        for (k = _i = 0, _len = menuItems.length; _i < _len; k = ++_i) {
          item = menuItems[k];
          el = $('<div><div class="image"></div></div>');
          el.data('index', k).append(item.name).appendTo('.action-menu');
        }
        this.menu.children('div').first().addClass('selected');
      }
      this.ui.cursor.visible = false;
      this.ui.controlState = new _cs.cui.ActionMenu(this.ui, this);
      this.show();
      return this.ui.chapter.map.setOverlayRange(this.unit.pos, this.unit.totalRange, 'ATTACK');
    };

    ActionMenu.prototype.show = function() {
      return this.menu.css('display', 'inline-block');
    };

    ActionMenu.prototype.hide = function() {
      return this.menu.css('display', 'none');
    };

    return ActionMenu;

  })();

  _cui.ActionMenuItem = (function() {
    function ActionMenuItem(name, handler) {
      this.name = name;
      this.handler = handler;
    }

    return ActionMenuItem;

  })();

  _cs.cui.ActionMenu = (function(_super) {
    __extends(ActionMenu, _super);

    function ActionMenu() {
      return ActionMenu.__super__.constructor.apply(this, arguments);
    }

    ActionMenu.prototype.f = function() {
      var k;
      k = this.menuObj.menu.find('.selected').data('index');
      this.menuObj.hide();
      this.ui.controlState = new _cs.cui.Map(this.ui);
      return this.menuObj.menuItems[k].handler();
    };

    ActionMenu.prototype.d = function() {
      var ch, unit;
      this.ui.actionMenu.hide();
      this.ui.controlState = new _cs.cui.Map(this.ui);
      ch = this.ui.chapter;
      unit = ch.playerTurn.selectedUnit;
      unit.pos = unit.oldPos;
      ch.playerTurn.deselect();
      this.ui.cursor.visible = true;
      return this.ui.cursor.moveTo(unit.pos.clone());
    };

    return ActionMenu;

  })(_cs.cui.Menu);

}).call(this);
