// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.Chapter1 = (function(_super) {
    __extends(Chapter1, _super);

    function Chapter1(ui) {
      var enemyTeam, enemyUnits, map, playerPositions, playerTeam, playerUnits, terrainMapping, tiles;
      playerUnits = [new uclass.special.Ace(), new uclass.special.Arrow(), new uclass.special.Luciana(), new uclass.special.Kenji()];
      playerTeam = new PlayerTeam(playerUnits);
      enemyUnits = [
        new uclass.Mercenary({
          pos: new Position(4, 2),
          level: 1,
          inventory: [new item.IronSword()]
        }), new uclass.Mercenary({
          pos: new Position(6, 4),
          level: 1,
          inventory: [new item.IronSword()]
        }), new uclass.Archer({
          pos: new Position(8, 3),
          level: 1,
          inventory: [new item.IronBow()]
        }), new uclass.Mercenary({
          name: 'Bandit lord',
          pos: new Position(2, 11),
          aiType: AI_TYPE.HALT,
          level: 3,
          inventory: [new item.IronSword()]
        })
      ];
      enemyTeam = new EnemyTeam(enemyUnits, {
        defaultName: 'Bandit'
      });
      enemyTeam.insigniaImagePath = 'images/bandit_insignia.png';
      terrainMapping = {
        0: terrain.Plain,
        1: terrain.Thicket,
        2: terrain.Forest
      };
      tiles = [[0, 0, 0, 1, 1, 1, 1, 2, 2, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 1, 0, 0], [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 0, 0]];
      playerPositions = [[0, 1], [1, 0], [2, 1], [1, 2]];
      map = new Map(tiles, terrainMapping, playerPositions);
      Chapter1.__super__.constructor.call(this, ui, map, playerTeam, enemyTeam, VICTORY_CONDITION.ROUT);
    }

    return Chapter1;

  })(Chapter);

}).call(this);
