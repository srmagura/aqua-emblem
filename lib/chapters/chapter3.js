// Generated by CoffeeScript 1.8.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _chapters.Chapter3 = (function(_super) {
    __extends(Chapter3, _super);

    function Chapter3(ui) {
      var enemyUnits, map, obj, playerPositions, reinforcements, reinforcements1, terrainMapping, tiles, turn, unit, _i, _j, _len, _len1, _ref;
      this.ui = ui;
      this.ui.file.playerTeam.addUnit(new _unit.special.Shiina());
      enemyUnits = [
        new _enemy.Mercenary({
          pos: new Position(3, 3)
        }), new _enemy.Mercenary({
          pos: new Position(6, 7)
        }), new _enemy.Mercenary({
          pos: new Position(4, 15)
        }), new _enemy.Soldier({
          pos: new Position(1, 2),
          items: [new _item.SteelLance()]
        }), new _enemy.Soldier({
          pos: new Position(4, 12)
        }), new _enemy.Soldier({
          pos: new Position(7, 4)
        }), new _enemy.Soldier({
          pos: new Position(6, 15)
        }), new _enemy.Fighter({
          pos: new Position(13, 12)
        }), new _enemy.Fighter({
          pos: new Position(0, 15)
        }), new _enemy.Fighter({
          pos: new Position(13, 4)
        }), new _enemy.Fighter({
          pos: new Position(13, 5),
          dld: -2
        }), new _enemy.Mercenary({
          pos: new Position(0, 2),
          items: [new _item.SteelSword()],
          aiOptions: {
            startTurn: 4
          }
        }), new _enemy.Mercenary({
          pos: new Position(3, 0),
          aiOptions: {
            startTurn: 1
          }
        }), new _enemy.Archer({
          pos: new Position(8, 14),
          aiOptions: {
            startTurn: 2
          }
        }), new _enemy.Archer({
          pos: new Position(7, 15),
          dld: 2,
          items: [new _item.SteelBow()],
          aiOptions: {
            startTurn: 2
          }
        }), new _enemy.Mercenary({
          pos: new Position(9, 12),
          aiOptions: {
            startTurn: 2
          }
        }), new _enemy.Fighter({
          pos: new Position(13, 13),
          items: [new _item.HandAxe()],
          aiOptions: {
            startTurn: 2
          }
        }), new _enemy.Fighter({
          pos: new Position(9, 0),
          aiOptions: {
            startTurn: 2
          }
        }), new _enemy.Fighter({
          pos: new Position(7, 0),
          items: [new _item.SteelAxe()],
          dld: 1,
          aiOptions: {
            startTurn: 2
          }
        }), new _enemy.Fighter({
          pos: new Position(6, 11),
          dld: 2
        }), new _enemy.Archer({
          pos: new Position(10, 9),
          dld: 2,
          aiOptions: {
            startTurn: 2
          }
        }), new _enemy.Soldier({
          pos: new Position(12, 1),
          boss: true,
          dld: 3,
          items: [new _item.BraveLance().letDrop()],
          aiOptions: {
            startTurn: 5
          }
        })
      ];
      reinforcements1 = [
        {
          cls: _enemy.Fighter,
          attr: {
            pos: new Position(13, 13)
          }
        }, {
          cls: _enemy.Archer,
          attr: {
            pos: new Position(13, 5),
            dld: -1
          }
        }
      ];
      reinforcements = [];
      _ref = [3, 5, 7];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        turn = _ref[_i];
        for (_j = 0, _len1 = reinforcements1.length; _j < _len1; _j++) {
          obj = reinforcements1[_j];
          unit = new obj.cls(obj.attr);
          unit.spawnTurn = turn;
          reinforcements.push(unit);
        }
      }
      this.enemyTeam = new _team.EnemyTeam(enemyUnits, {
        defaultName: 'Bandit',
        defaultAiType: _unit.aiType.aggressive,
        defaultLevel: 5,
        reinforcements: reinforcements
      });
      terrainMapping = {
        0: _terrain.Plain,
        1: _terrain.Rocks,
        2: _terrain.Forest,
        5: _terrain.Fort
      };
      tiles = [[1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 2], [0, 0, 2, 0, 1, 1, 2, 0, 2, 2, 2, 2, 0, 0, 0, 2], [0, 1, 1, 2, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 2, 2], [2, 2, 1, 2, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 2, 2, 0, 2, 0, 1, 2, 0, 0, 0], [1, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 0, 0, 1, 2, 0], [2, 2, 2, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], [2, 0, 0, 1, 2, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 2], [1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 0, 0, 2, 0, 1], [0, 2, 0, 0, 0, 2, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 1, 1], [1, 0, 1, 1, 2, 0, 1, 0, 2, 0, 0, 1, 0, 0, 1, 1], [1, 2, 1, 1, 2, 0, 2, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 2, 2, 5, 2, 1, 0, 1, 1, 1, 2, 5, 2, 1]];
      playerPositions = [[2, 7], [1, 6], [3, 8], [2, 9], [1, 8]];
      this.origin0 = new Position(4 * this.ui.tw, 0);
      this.victoryCondition = _map.VICTORY_CONDITION.ROUT;
      map = new _map.Map(tiles, terrainMapping, playerPositions);
      Chapter3.__super__.constructor.call(this, this.ui, map);
    }

    Chapter3.prototype.doScrollSequence = function(callback) {
      var f;
      f = (function(_this) {
        return function() {
          return _this.ui.scrollTo(new Position(0, 0), callback, .07);
        };
      })(this);
      return setTimeout(f, 1000 / this.ui.speedMultiplier);
    };

    return Chapter3;

  })(_map.Chapter);

}).call(this);
