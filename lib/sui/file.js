// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window._file = {};

  _file.fs = {};

  _file.difficulty = {
    normal: {
      statBonus: 1,
      expMultiplier: 4 / 3
    },
    hard: {
      statBonus: 0,
      expMultiplier: 1
    }
  };

  _file.File = (function() {
    function File() {}

    File.prototype.setFileState = function(fsCls) {
      return this.fileState = new fsCls(this);
    };

    File.prototype.init = function() {
      return this.fileState.init();
    };

    File.prototype.pickle = function() {
      var obj;
      obj = {
        'difficultyStr': this.difficultyStr,
        'fsCls': _util.getFunctionName(this.fileState.constructor),
        'playerTeam': this.playerTeam.pickle()
      };
      return JSON.stringify(obj);
    };

    File.unpickle = function(str) {
      var error, file, fsCls, pickled;
      try {
        pickled = $.parseJSON(str);
      } catch (_error) {
        error = _error;
        return null;
      }
      if (pickled == null) {
        return null;
      }
      file = new _file.File();
      if ('difficultyStr' in pickled) {
        file.difficultyStr = pickled.difficultyStr;
        file.difficulty = _file.difficulty[file.difficultyStr];
      } else {
        return null;
      }
      if ('fsCls' in pickled) {
        fsCls = pickled.fsCls;
        if (fsCls in _file.fs) {
          file.setFileState(_file.fs[fsCls]);
        } else {
          return null;
        }
      } else {
        return null;
      }
      file.playerTeam = _team.PlayerTeam.unpickle(pickled.playerTeam);
      if (file.playerTeam === null) {
        return null;
      }
      return file;
    };

    return File;

  })();

  _file.FileState = (function() {
    function FileState(file) {
      this.file = file;
      this.chapterComplete = __bind(this.chapterComplete, this);
    }

    FileState.prototype.chapterComplete = function() {
      this.ui.destroy();
      this.file.setFileState(this.nextFs);
      localStorage.setItem('file', this.file.pickle());
      this.ui = new _sui.StartUI(this.file);
      return this.ui.init({
        message: this.ui.messages.chapterComplete
      });
    };

    return FileState;

  })();

  _file.createNewFile = function(difficultyStr) {
    var file, playerUnits;
    file = new _file.File();
    file.difficultyStr = difficultyStr;
    file.difficulty = _file.difficulty[difficultyStr];
    file.setFileState(_file.fs.Chapter1);
    playerUnits = [new _unit.special.Ace(), new _unit.special.Arrow(), new _unit.special.Luciana(), new _unit.special.Kenji()];
    file.playerTeam = new _team.PlayerTeam(playerUnits);
    return file;
  };

}).call(this);
