// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window._sui = {};

  _cs.sui = {};

  _sui.StartUI = (function(_super) {
    __extends(StartUI, _super);

    function StartUI() {
      StartUI.__super__.constructor.call(this);
      this.vn = $('.vn-wrapper');
      this.controlState = new _cs.ControlState(this);
      this.wrapper = this.vn.find('.start-menu-container');
      this.itemContainer = this.wrapper.find('.items');
    }

    StartUI.prototype.init = function(fade) {
      var next;
      if (fade == null) {
        fade = false;
      }
      this.itemContainer.html('');
      this.wrapper.show();
      _vn.setBackgroundImage(this.wrapper, 'start.png');
      next = (function(_this) {
        return function() {
          return _this.initMenu(_sui.StartMenuMain);
        };
      })(this);
      if (fade) {
        return this.vn.fadeIn(1000, next);
      } else {
        this.vn.show();
        return next();
      }
    };

    StartUI.prototype.initMenu = function(menuCls) {
      this.menu = new menuCls(this, this.itemContainer);
      this.menu.init();
      return this.controlState = new _cs.sui.StartMenu(this, this.menu);
    };

    StartUI.prototype.destroy = function() {
      this.wrapper.hide();
      return this.vn.hide();
    };

    return StartUI;

  })(UI);

  _sui.StartMenu = (function() {
    function StartMenu(ui, menu) {
      this.ui = ui;
      this.menu = menu;
    }

    StartMenu.prototype.getMenuEl = function(mainText, subtext) {
      var el;
      if (subtext == null) {
        subtext = '';
      }
      el = $('<div></div>').addClass('menu-item');
      $('<div></div>').addClass('main-text').html(mainText).appendTo(el);
      $('<div></div>').addClass('subtext').html(subtext).appendTo(el);
      return el;
    };

    StartMenu.prototype.selectFirst = function() {
      return this.menu.children().first().addClass('selected');
    };

    StartMenu.prototype.getSelected = function() {
      return this.menu.find('.selected');
    };

    StartMenu.prototype.back = function() {};

    return StartMenu;

  })();

  _sui.StartMenuMain = (function(_super) {
    __extends(StartMenuMain, _super);

    function StartMenuMain() {
      this.handleNewGame = __bind(this.handleNewGame, this);
      return StartMenuMain.__super__.constructor.apply(this, arguments);
    }

    StartMenuMain.prototype.init = function() {
      this.menu.html('');
      this.getMenuEl('New game').appendTo(this.menu).data('handler', this.handleNewGame);
      this.selectFirst();
      return this.controlState = new _cs.sui.StartMenu(this, this.menu);
    };

    StartMenuMain.prototype.handleNewGame = function() {
      return this.ui.initMenu(_sui.StartMenuDifficulty);
    };

    return StartMenuMain;

  })(_sui.StartMenu);

  _sui.StartMenuDifficulty = (function(_super) {
    __extends(StartMenuDifficulty, _super);

    function StartMenuDifficulty() {
      this.handler = __bind(this.handler, this);
      return StartMenuDifficulty.__super__.constructor.apply(this, arguments);
    }

    StartMenuDifficulty.prototype.init = function() {
      var hard, normal;
      this.menu.html('');
      normal = this.getMenuEl('Normal', 'The default difficulty.');
      normal.appendTo(this.menu).data('handler', this.handler);
      normal.data('difficulty', _file.difficulty.normal);
      hard = this.getMenuEl('Hard', 'How Aqua Emblem is meant to be played. ' + 'Units start at a lower ' + 'level and gain experience more slowly.');
      hard.appendTo(this.menu).data('handler', this.handler);
      hard.data('difficulty', _file.difficulty.hard);
      return this.selectFirst();
    };

    StartMenuDifficulty.prototype.back = function() {
      return this.ui.initMenu(_sui.StartMenuMain);
    };

    StartMenuDifficulty.prototype.handler = function() {
      var file;
      file = new _file.File();
      file.setFileState(_file.fs.Chapter1);
      file.difficulty = this.getSelected().data('difficulty');
      this.ui.destroy();
      return file.init();
    };

    return StartMenuDifficulty;

  })(_sui.StartMenu);

  _cs.sui.StartMenu = (function(_super) {
    __extends(StartMenu, _super);

    function StartMenu() {
      return StartMenu.__super__.constructor.apply(this, arguments);
    }

    StartMenu.prototype.f = function() {
      return this.menuObj.getSelected().data('handler')();
    };

    StartMenu.prototype.d = function() {
      return this.menuObj.back();
    };

    return StartMenu;

  })(_cs.Menu);

}).call(this);
