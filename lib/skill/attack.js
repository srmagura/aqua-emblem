// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _cs.cui.AttackSkill = (function(_super) {
    __extends(AttackSkill, _super);

    function AttackSkill(ui, playerTurn, skill) {
      var spot, spots, target, user, _i, _len;
      this.ui = ui;
      this.playerTurn = playerTurn;
      this.skill = skill;
      AttackSkill.__super__.constructor.call(this, this.ui, this.playerTurn, this.skill);
      user = this.playerTurn.selectedUnit;
      spots = this.playerTurn.getActionRange(user.pos, this.skill.range);
      for (_i = 0, _len = spots.length; _i < _len; _i++) {
        spot = spots[_i];
        target = this.ui.chapter.getUnitAt(spot);
        if ((target != null) && this.skill.isValidTarget(target)) {
          this.ui.cursor.moveTo(spot);
          this.moved();
          break;
        }
      }
    }

    AttackSkill.prototype.moved = function() {
      var result, target, user;
      result = this.getUserTarget();
      if (result === false) {
        this.battle = null;
        return this.ui.battleStatsPanel.hide();
      } else {
        user = result.user;
        target = result.target;
        user.equipped = this.skill;
        this.battle = new _enc.Battle(this.ui, user, target);
        return this.ui.battleStatsPanel.init(this.battle);
      }
    };

    AttackSkill.prototype.f = function() {
      var callback;
      callback = (function(_this) {
        return function() {
          var exp;
          _this.playerTurn.selectedUnit.inventory.refresh();
          exp = _this.battle.getExpToAdd();
          return _this.skillDone(exp);
        };
      })(this);
      AttackSkill.__super__.f.call(this);
      this.ui.battleStatsPanel.hide();
      this.battle.doEncounter(callback);
      return this.battle.showSkillMessage(this.skill);
    };

    return AttackSkill;

  })(_cs.cui.Skill);

  _skill.Flare = (function(_super) {
    __extends(Flare, _super);

    function Flare() {
      Flare.__super__.constructor.call(this);
      this.overlayType = 'ATTACK';
      this.type = new _skill.type.Dark();
      this.name = 'Flare';
      this.imageName = 'flare';
      this.desc = 'Launch a wave of fire from your sword.';
      this.mp = 4;
      this.hit = 90;
      this.might = 4;
      this.crit = 10;
      this.weight = 10;
      this.range = new Range(1, 2);
      this.controlState = _cs.cui.AttackSkill;
    }

    Flare.prototype.isValidTarget = function(target) {
      return target.team instanceof _team.EnemyTeam;
    };

    return Flare;

  })(_skill.Skill);

}).call(this);
