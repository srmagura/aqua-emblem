// Generated by CoffeeScript 1.12.2
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  _cs.chapterui.AttackSkill = (function(superClass) {
    extend(AttackSkill, superClass);

    function AttackSkill(ui, playerTurn, skill) {
      var i, len, spot, spots, target, user;
      this.ui = ui;
      this.playerTurn = playerTurn;
      this.skill = skill;
      AttackSkill.__super__.constructor.call(this, this.ui, this.playerTurn, this.skill);
      user = this.playerTurn.selectedUnit;
      spots = this.playerTurn.getActionRange(user.pos, this.skill.range);
      for (i = 0, len = spots.length; i < len; i++) {
        spot = spots[i];
        target = this.ui.chapter.getUnitAt(spot);
        if ((target != null) && this.skill.isValidTarget(target)) {
          this.ui.cursor.moveTo(spot);
          break;
        }
      }
      this.moved();
    }

    AttackSkill.prototype.moved = function() {
      var result, target, user;
      result = this.getUserTarget();
      if (result === false) {
        this.battle = null;
        return this.ui.battleStatsPanel.hide();
      } else {
        user = result.user;
        target = result.target;
        user.equipped = this.skill;
        this.battle = new _enc.Battle(this.ui, user, target);
        return this.ui.battleStatsPanel.init(this.battle);
      }
    };

    AttackSkill.prototype.f = function() {
      var callback;
      callback = (function(_this) {
        return function() {
          var exp;
          _this.playerTurn.selectedUnit.inventory.refresh();
          exp = _this.battle.getExpToAdd();
          return _this.skillDone(exp);
        };
      })(this);
      if (this.battle === null) {
        return;
      }
      AttackSkill.__super__.f.call(this);
      this.ui.battleStatsPanel.hide();
      return this.battle.doEncounter(callback);
    };

    return AttackSkill;

  })(_cs.chapterui.Skill);

  _skill.AttackSkill = (function(superClass) {
    extend(AttackSkill, superClass);

    function AttackSkill() {
      AttackSkill.__super__.constructor.call(this);
      this.crit = 0;
      this.nAttackMultiplier = 1;
      this.controlState = _cs.chapterui.AttackSkill;
      this.overlayType = 'ATTACK';
    }

    AttackSkill.prototype.isValidTarget = function(target) {
      return (target != null) && target.team instanceof _team.EnemyTeam;
    };

    AttackSkill.prototype.hasUses = function(x) {
      return true;
    };

    return AttackSkill;

  })(_skill.Skill);

  _skill.Flare = (function(superClass) {
    extend(Flare, superClass);

    function Flare() {
      Flare.__super__.constructor.call(this);
      this.type = new _skill.type.Dark();
      this.name = 'Flare';
      this.imageName = 'flare';
      this.desc = 'Launch a wave of fire from your sword.';
      this.mp = 4;
      this.hit = 90;
      this.might = 5;
      this.crit = 10;
      this.weight = 6;
      this.range = new Range(1, 2);
    }

    return Flare;

  })(_skill.AttackSkill);

  _skill.SwordRain = (function(superClass) {
    extend(SwordRain, superClass);

    function SwordRain() {
      SwordRain.__super__.constructor.call(this);
      this.type = new _skill.type.Sword();
      this.name = 'Sword Rain';
      this.imageName = 'sword_rain';
      this.desc = 'Hit four times in a row.';
      this.mp = 6;
      this.hit = 70;
      this.might = 3;
      this.weight = 2e308;
      this.range = new Range(1);
      this.nAttackMultiplier = 4;
    }

    return SwordRain;

  })(_skill.AttackSkill);

  _skill.Meteor = (function(superClass) {
    extend(Meteor, superClass);

    function Meteor() {
      Meteor.__super__.constructor.call(this);
      this.type = new _skill.type.Dark();
      this.name = 'Meteor';
      this.imageName = 'meteor';
      this.desc = 'Medium-range dark magic.';
      this.mp = 10;
      this.hit = 70;
      this.might = 13;
      this.weight = 2e308;
      this.range = new Range(1, 4);
    }

    return Meteor;

  })(_skill.AttackSkill);

  _skill.PoisonArrow = (function(superClass) {
    extend(PoisonArrow, superClass);

    function PoisonArrow() {
      var ironBow;
      PoisonArrow.__super__.constructor.call(this);
      this.type = new _skill.type.Bow();
      this.name = 'Poison Arrow';
      this.imageName = 'poison_arrow';
      this.desc = 'Poisons the target.';
      this.mp = 2;
      ironBow = new _item.IronBow();
      this.hit = ironBow.hit;
      this.might = 2;
      this.weight = ironBow.weight;
      this.range = new Range(2);
    }

    PoisonArrow.prototype.getStatusEffect = function(data) {
      return new _status.Poison(data.battle.atk.battleStats.dmg);
    };

    return PoisonArrow;

  })(_skill.AttackSkill);

}).call(this);
