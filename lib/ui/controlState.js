// Generated by CoffeeScript 1.12.2
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window._cs = {};

  _cs.ControlState = (function() {
    function ControlState(ui) {
      this.ui = ui;
    }

    ControlState.prototype.up = function() {};

    ControlState.prototype.down = function() {};

    ControlState.prototype.left = function() {};

    ControlState.prototype.right = function() {};

    ControlState.prototype.f = function() {};

    ControlState.prototype.d = function() {};

    ControlState.prototype.s = function() {};

    ControlState.prototype.e = function() {};

    ControlState.prototype.v = function() {};

    return ControlState;

  })();

  _cs.Menu = (function(superClass) {
    extend(Menu, superClass);

    function Menu(ui, menuObj) {
      this.ui = ui;
      this.menuObj = menuObj;
    }

    Menu.prototype.onChange = function() {};

    Menu.prototype.up = function() {
      var sel;
      sel = this.menuObj.menu.find('.selected');
      sel.removeClass('selected');
      if (sel.prev().size() !== 0) {
        sel.prev().addClass('selected');
      } else {
        this.menuObj.menu.children('div').last().addClass('selected');
      }
      return this.onChange();
    };

    Menu.prototype.down = function() {
      var sel;
      sel = this.menuObj.menu.find('.selected');
      sel.removeClass('selected');
      if (sel.next().size() !== 0) {
        sel.next().addClass('selected');
      } else {
        this.menuObj.menu.children('div').first().addClass('selected');
      }
      return this.onChange();
    };

    return Menu;

  })(_cs.ControlState);

}).call(this);
