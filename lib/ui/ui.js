// Generated by CoffeeScript 1.12.2
(function() {
  var handlersSet, keydownHandler, unloadStr,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  handlersSet = false;

  keydownHandler = function(e) {
    var prevent, ref;
    switch (e.which) {
      case 38:
        ui.controlState.up();
        break;
      case 40:
        ui.controlState.down();
        break;
      case 37:
        ui.controlState.left();
        break;
      case 39:
        ui.controlState.right();
        break;
      case 70:
        ui.controlState.f();
        break;
      case 68:
        ui.controlState.d();
        break;
      case 83:
        ui.controlState.s();
        break;
      case 69:
        ui.controlState.e();
        break;
      case 86:
        ui.controlState.v();
    }
    prevent = [37, 38, 39, 40];
    if (ref = e.which, indexOf.call(prevent, ref) >= 0) {
      e.preventDefault();
      return false;
    }
  };

  unloadStr = 'Are you sure you want to quit? If you do, your unsaved progress will be lost.';

  window.UI = (function() {
    function UI() {
      window.ui = this;
      if (!handlersSet) {
        $(window).keydown(keydownHandler);
        handlersSet = true;
      }
    }

    UI.prototype.setConfirmUnload = function(bool) {
      if (bool) {
        return window.onbeforeunload = (function() {
          return unloadStr;
        });
      } else {
        return window.onbeforeunload = null;
      }
    };

    return UI;

  })();

}).call(this);
