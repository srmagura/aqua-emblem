// Generated by CoffeeScript 1.7.1
(function() {
  var CsWeaponMenu,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.WeaponMenu = (function() {
    function WeaponMenu(ui) {
      this.ui = ui;
      this.menu = $('.weapon-menu');
    }

    WeaponMenu.prototype.init = function(playerTurn) {
      var item, menuItem, _i, _len, _ref;
      this.playerTurn = playerTurn;
      this.menu.html('');
      _ref = this.playerTurn.selectedUnit.inventory;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        if (item instanceof window.item.Weapon) {
          menuItem = $('<div><div class="image"></div></div>');
          menuItem.append(item.getElement());
          menuItem.data('weapon', item).appendTo(this.menu);
        }
      }
      this.menu.children('div').first().addClass('selected');
      this.show();
      return this.ui.controlState = new CsWeaponMenu(this.ui, this);
    };

    WeaponMenu.prototype.show = function() {
      return this.menu.css('display', 'inline-block');
    };

    WeaponMenu.prototype.hide = function() {
      return this.menu.css('display', 'none');
    };

    return WeaponMenu;

  })();

  CsWeaponMenu = (function(_super) {
    __extends(CsWeaponMenu, _super);

    function CsWeaponMenu(ui, menuObj) {
      this.ui = ui;
      this.menuObj = menuObj;
      this.playerTurn = this.ui.chapter.playerTurn;
    }

    CsWeaponMenu.prototype.onChange = function() {
      return this.playerTurn.battle.setPlayerWeapon(this.menuObj.menu.find('.selected').data('weapon'));
    };

    CsWeaponMenu.prototype.f = function() {
      var pt;
      this.ui.weaponMenu.hide();
      pt = this.menuObj.playerTurn;
      this.ui.controlState = new CsChooseTarget(this.ui, pt);
      this.ui.cursor.moveTo(pt.inRange[0].pos);
      return this.ui.cursor.visible = true;
    };

    CsWeaponMenu.prototype.d = function() {
      this.ui.cursor.visible = true;
      this.menuObj.hide();
      this.ui.battleStatsPanel.hide();
      return this.ui.controlState = new CsChooseTarget(this.ui, this.menuObj.playerTurn);
    };

    return CsWeaponMenu;

  })(CsMenu);

}).call(this);
