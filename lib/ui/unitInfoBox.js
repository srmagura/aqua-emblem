// Generated by CoffeeScript 1.7.1
(function() {
  window.UnitInfoBox = (function() {
    function UnitInfoBox(ui, selector) {
      this.ui = ui;
      this.box = $(selector);
    }

    UnitInfoBox.prototype.update = function() {
      var unit;
      unit = this.ui.chapter.getUnitAt(this.ui.cursor.pos);
      if (unit != null) {
        this.populate(unit, false);
        return this.show();
      }
    };

    UnitInfoBox.prototype.populate = function(unit, animate) {
      var src;
      if (unit.picture) {
        this.box.find('img').attr('src', 'images/characters/' + unit.name.toLowerCase() + '.png');
        this.box.find('.image-wrapper').show();
      } else {
        this.box.find('.image-wrapper').hide();
      }
      this.box.find('.name').text(unit.name);
      src = "images/items/" + unit.equipped.image;
      this.box.find('.equipped').attr('src', src);
      this.populateHp(unit, animate);
      return this.populateMp(unit, animate);
    };

    UnitInfoBox.prototype.populateHp = function(unit, animate) {
      var width;
      this.box.find('.hp').text(unit.hp);
      this.box.find('.base-hp').text(unit.baseHp);
      width = unit.hp / unit.baseHp * this.box.find('.hp-bar').width();
      if (animate) {
        return this.box.find('.hp-bar-filled').animate({
          width: width
        }, 200);
      } else {
        return this.box.find('.hp-bar-filled').width(width);
      }
    };

    UnitInfoBox.prototype.populateMp = function(unit, animate) {
      var width;
      if ('baseMp' in unit) {
        this.box.find('.mp').text(unit.mp);
        this.box.find('.base-mp').text(unit.baseMp);
        width = unit.mp / unit.baseMp * this.box.find('.mp-bar').width();
        if (animate) {
          this.box.find('.mp-bar-filled').animate({
            width: width
          }, 200);
        } else {
          this.box.find('.mp-bar-filled').width(width);
        }
        this.box.find('.mp-bar-container').show();
      } else {
        this.box.find('.mp-bar-container').hide();
      }
      if (unit.team === this.ui.chapter.playerTeam) {
        return this.box.removeClass('red-box').addClass('blue-box');
      } else {
        return this.box.removeClass('blue-box').addClass('red-box');
      }
    };

    UnitInfoBox.prototype.show = function() {
      return this.box.css('visibility', 'visible');
    };

    UnitInfoBox.prototype.hide = function() {
      return this.box.css('visibility', 'hidden');
    };

    return UnitInfoBox;

  })();

}).call(this);
