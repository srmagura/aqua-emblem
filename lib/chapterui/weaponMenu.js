// Generated by CoffeeScript 1.12.2
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  _chapterui.WeaponMenu = (function() {
    function WeaponMenu(ui) {
      var itemInfoBoxEl;
      this.ui = ui;
      this.menu = $('.weapon-menu');
      itemInfoBoxEl = $('.sidebar .item-info-box');
      this.itemInfoBox = new _chapterui.ItemInfoBox(this.ui, itemInfoBoxEl);
    }

    WeaponMenu.prototype.init = function(playerTurn) {
      var i, item, len, menuItem, options, ref;
      if (playerTurn != null) {
        this.playerTurn = playerTurn;
        this.unit = this.playerTurn.selectedUnit;
      }
      this.menu.html('');
      ref = this.unit.inventory.it();
      for (i = 0, len = ref.length; i < len; i++) {
        item = ref[i];
        if (this.unit.canWield(item)) {
          options = {
            equipped: item === this.unit.equipped
          };
          menuItem = $('<div><div class="image"></div></div>');
          menuItem.addClass('menu-choice');
          menuItem.append(item.getElement(options));
          menuItem.appendTo(this.menu);
        }
      }
      this.menu.children('div').first().addClass('selected');
      this.selectedItemChanged();
      this.show();
      return this.ui.controlState = new _cs.chapterui.WeaponMenu(this.ui, this);
    };

    WeaponMenu.prototype.getSelectedItem = function() {
      var el;
      el = this.menu.find('.selected .item-element');
      return el.data('item');
    };

    WeaponMenu.prototype.selectedItemChanged = function() {
      var item;
      item = this.getSelectedItem();
      return this.itemInfoBox.init(item, this.unit.canUse(item));
    };

    WeaponMenu.prototype.show = function() {
      return this.menu.css('display', 'inline-block');
    };

    WeaponMenu.prototype.hide = function() {
      this.itemInfoBox.hide();
      return this.menu.css('display', 'none');
    };

    return WeaponMenu;

  })();

  _cs.chapterui.WeaponMenu = (function(superClass) {
    extend(WeaponMenu, superClass);

    function WeaponMenu(ui, menuObj) {
      this.ui = ui;
      this.menuObj = menuObj;
      WeaponMenu.__super__.constructor.call(this, this.ui, this.menuObj);
      this.playerTurn = this.ui.chapter.playerTurn;
    }

    WeaponMenu.prototype.onChange = function() {
      return this.menuObj.selectedItemChanged();
    };

    WeaponMenu.prototype.f = function() {
      var item, pt;
      item = this.menuObj.getSelectedItem();
      this.menuObj.unit.setEquipped(item);
      this.ui.weaponMenu.hide();
      pt = this.menuObj.playerTurn;
      this.ui.controlState = new _cs.chapterui.ChooseAttackTarget(this.ui, pt);
      this.ui.cursor.moveTo(pt.inAttackRange[0].pos);
      return this.ui.cursor.visible = true;
    };

    WeaponMenu.prototype.d = function() {
      this.menuObj.hide();
      return this.ui.actionMenu.init();
    };

    return WeaponMenu;

  })(_cs.chapterui.Menu);

}).call(this);
