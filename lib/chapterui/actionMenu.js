// Generated by CoffeeScript 1.12.2
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  _chapterui.ActionMenu = (function() {
    function ActionMenu(ui) {
      this.ui = ui;
    }

    ActionMenu.prototype.init = function(menuItems) {
      var el, i, item, len;
      if (menuItems != null) {
        this.menu.html('');
        for (i = 0, len = menuItems.length; i < len; i++) {
          item = menuItems[i];
          el = $('<div><div class="image"></div></div>');
          el.append(item.name).appendTo(this.menu);
          el.data('handler', item.handler);
        }
        this.menu.children('div').first().addClass('selected');
      }
      return this.show();
    };

    ActionMenu.prototype.callSelectedHandler = function() {
      var handler;
      handler = this.menu.find('.selected').data('handler');
      return handler();
    };

    ActionMenu.prototype.show = function() {
      return this.menu.css('display', 'inline-block');
    };

    ActionMenu.prototype.hide = function() {
      return this.menu.css('display', 'none');
    };

    return ActionMenu;

  })();

  _chapterui.ActionMenuItem = (function() {
    function ActionMenuItem(name, handler1) {
      this.name = name;
      this.handler = handler1;
    }

    return ActionMenuItem;

  })();

  _chapterui.ActionMenuMain = (function(superClass) {
    extend(ActionMenuMain, superClass);

    function ActionMenuMain(ui) {
      this.ui = ui;
      ActionMenuMain.__super__.constructor.call(this, this.ui);
      this.menu = $('.action-menu');
    }

    ActionMenuMain.prototype.init = function(unit, menuItems) {
      ActionMenuMain.__super__.init.call(this, menuItems);
      if (unit != null) {
        this.unit = unit;
      }
      this.ui.cursor.visible = false;
      this.ui.controlState = new _cs.chapterui.ActionMenuMain(this.ui, this);
      return this.ui.chapter.map.setOverlayRange(this.unit.pos, this.unit.totalRange, 'ATTACK');
    };

    return ActionMenuMain;

  })(_chapterui.ActionMenu);

  _cs.chapterui.ActionMenuMain = (function(superClass) {
    extend(ActionMenuMain, superClass);

    function ActionMenuMain() {
      return ActionMenuMain.__super__.constructor.apply(this, arguments);
    }

    ActionMenuMain.prototype.f = function() {
      this.menuObj.hide();
      this.ui.controlState = new _cs.chapterui.Map(this.ui);
      return this.menuObj.callSelectedHandler();
    };

    ActionMenuMain.prototype.d = function() {
      var ch, unit;
      this.ui.actionMenu.hide();
      this.ui.controlState = new _cs.chapterui.Map(this.ui);
      ch = this.ui.chapter;
      unit = ch.playerTurn.selectedUnit;
      unit.pos = unit.oldPos;
      ch.playerTurn.deselect();
      this.ui.cursor.visible = true;
      return this.ui.cursor.moveTo(unit.pos.clone());
    };

    return ActionMenuMain;

  })(_cs.chapterui.Menu);

}).call(this);
