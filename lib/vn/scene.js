// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _vn.Scene = (function() {
    function Scene(ui) {
      this.ui = ui;
      this.done = __bind(this.done, this);
      this.fadeLocationBox = __bind(this.fadeLocationBox, this);
      this.afterFadeIn = __bind(this.afterFadeIn, this);
      this.sceneId = 0;
      this.wrapper = this.ui.wrapper.find('.scene');
      this.chatbox = this.wrapper.find('.chatbox');
      this.locationBox = this.wrapper.find('.location');
      this.fadeDelay = 400;
      this.locationText = null;
    }

    Scene.prototype.init = function(lines, bgImage, callback) {
      this.lines = lines;
      this.callback = callback;
      this.lineIndex = 0;
      this.callbackMade = false;
      this.locationBoxTimer = null;
      this.ui.controlState = new _cs.vn.Scene(this.ui, this);
      _vn.setBackgroundImage(this.wrapper, bgImage);
      this.chatbox.find('.unit .image, .text').html('');
      this.chatbox.find('.unit .name').hide();
      if (this.locationText != null) {
        this.locationBox.text(this.locationText).show();
      } else {
        this.locationBox.hide();
      }
      return this.wrapper.fadeIn(this.fadeDelay, this.afterFadeIn);
    };

    Scene.prototype.afterFadeIn = function() {
      this.showLine();
      this.locationBoxTimer = this.sceneId;
      return setTimeout(this.fadeLocationBox, 3000);
    };

    Scene.prototype.fadeLocationBox = function() {
      if (this.locationBoxTimer === this.sceneId) {
        return this.locationBox.fadeOut(this.fadeDelay);
      }
    };

    Scene.prototype.showLine = function() {
      var callback, img, lineObj, text, unit;
      if (this.callbackMade) {
        return;
      }
      this.ui.controlState = new _cs.vn.Scene(this.ui, this);
      if (this.lineIndex === this.lines.length) {
        this.wrapper.fadeOut(this.fadeDelay, this.done);
        return;
      }
      callback = (function(_this) {
        return function() {
          return _this.ui.controlState = new _cs.vn.SceneWaiting(_this.ui, _this);
        };
      })(this);
      lineObj = this.lines[this.lineIndex++];
      unit = lineObj[0];
      text = lineObj[1];
      img = $('<img/>').attr('src', unit.getImagePath());
      this.chatbox.find('.unit .image').html(img);
      this.chatbox.find('.unit .name').text(unit.name).show();
      return _vn.animateTextWithArrow(this.chatbox.find('.text'), text, callback);
    };

    Scene.prototype.skip = function() {
      this.wrapper.hide();
      return this.done();
    };

    Scene.prototype.done = function() {
      if (!this.callbackMade) {
        this.callbackMade = true;
        this.locationText = null;
        this.sceneId++;
        return this.callback();
      }
    };

    return Scene;

  })();

  _cs.vn.Scene = (function(_super) {
    __extends(Scene, _super);

    function Scene(ui, scene) {
      this.ui = ui;
      this.scene = scene;
    }

    Scene.prototype.v = function() {
      return this.scene.skip();
    };

    return Scene;

  })(_cs.ControlState);

  _cs.vn.SceneWaiting = (function(_super) {
    __extends(SceneWaiting, _super);

    function SceneWaiting() {
      return SceneWaiting.__super__.constructor.apply(this, arguments);
    }

    SceneWaiting.prototype.f = function() {
      return this.scene.showLine();
    };

    return SceneWaiting;

  })(_cs.vn.Scene);

}).call(this);
