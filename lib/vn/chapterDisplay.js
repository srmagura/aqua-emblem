// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _vn.ChapterDisplay = (function() {
    function ChapterDisplay(ui) {
      this.ui = ui;
      this.done = __bind(this.done, this);
      this.afterWait = __bind(this.afterWait, this);
      this.afterFadeIn = __bind(this.afterFadeIn, this);
      this.display = this.ui.wrapper.find('.chapter-display');
      this.fadeDelay = 2000;
    }

    ChapterDisplay.prototype.init = function(number, name, callback) {
      this.callback = callback;
      this.ui.controlState = new _cs.vn.ChapterDisplay(this.ui, this);
      this.callbackMade = false;
      this.display.find('.number').text(number);
      this.display.find('.name').text(name);
      _vn.setBackgroundImage(this.display, 'chapter_display');
      return this.display.fadeIn(this.fadeDelay, this.afterFadeIn);
    };

    ChapterDisplay.prototype.afterFadeIn = function() {
      return setTimeout(this.afterWait, 3000);
    };

    ChapterDisplay.prototype.afterWait = function() {
      if (!this.callbackMade) {
        return this.display.fadeOut(this.fadeDelay, this.done);
      }
    };

    ChapterDisplay.prototype.skip = function() {
      this.display.hide();
      return this.done();
    };

    ChapterDisplay.prototype.done = function() {
      this.ui.controlState = new _cs.ControlState(this.ui);
      if (!this.callbackMade) {
        this.callbackMade = true;
        return this.callback();
      }
    };

    return ChapterDisplay;

  })();

  _cs.vn.ChapterDisplay = (function(_super) {
    __extends(ChapterDisplay, _super);

    function ChapterDisplay(ui, displayObj) {
      this.ui = ui;
      this.displayObj = displayObj;
    }

    ChapterDisplay.prototype.v = function() {
      return this.displayObj.skip();
    };

    return ChapterDisplay;

  })(_cs.ControlState);

}).call(this);
