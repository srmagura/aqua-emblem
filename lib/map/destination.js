// Generated by CoffeeScript 1.8.0
(function() {
  _map.Destination = (function() {
    function Destination(pos, path) {
      this.pos = pos;
      this.path = path;
    }

    Destination.prototype.render = function(ui, ctx) {
      var dir, k, s, tw, x0, y0;
      tw = ui.tw;
      ctx.beginPath();
      k = 0;
      while (k < this.path.length - 1) {
        ctx.moveTo(this.path[k].j * tw + tw / 2 - ui.origin.j, this.path[k].i * tw + tw / 2 - ui.origin.i);
        ctx.lineTo(this.path[k + 1].j * tw + tw / 2 - ui.origin.j, this.path[k + 1].i * tw + tw / 2 - ui.origin.i);
        k++;
      }
      if (k > 0) {
        s = 10;
        x0 = this.pos.j * tw - ui.origin.j;
        y0 = this.pos.i * tw - ui.origin.i;
        dir = this.pos.subtract(this.path[k - 1]);
        if (dir.equals(new Position(1, 0))) {
          ctx.moveTo(x0 + s, y0 + s);
          ctx.lineTo(x0 + tw / 2, y0 + tw / 2);
          ctx.lineTo(x0 + tw - s, y0 + s);
        } else if (dir.equals(new Position(-1, 0))) {
          ctx.moveTo(x0 + s, y0 + tw - s);
          ctx.lineTo(x0 + tw / 2, y0 + tw / 2);
          ctx.lineTo(x0 + tw - s, y0 + tw - s);
        } else if (dir.equals(new Position(0, 1))) {
          ctx.moveTo(x0 + s, y0 + s);
          ctx.lineTo(x0 + tw / 2, y0 + tw / 2);
          ctx.lineTo(x0 + s, y0 + tw - s);
        } else if (dir.equals(new Position(0, -1))) {
          ctx.moveTo(x0 + tw - s, y0 + s);
          ctx.lineTo(x0 + tw / 2, y0 + tw / 2);
          ctx.lineTo(x0 + tw - s, y0 + tw - s);
        }
        ctx.strokeStyle = '#2266FF';
        ctx.lineWidth = 7;
        ctx.stroke();
        ctx.strokeStyle = '#3399FF';
        ctx.lineWidth = 3;
        ctx.stroke();
        ctx.strokeStyle = '#5BF';
        ctx.lineWidth = 1;
        ctx.stroke();
        return ctx.lineWidth = 2;
      }
    };

    return Destination;

  })();

}).call(this);
