// Generated by CoffeeScript 1.8.0
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  window.Range = (function() {
    function Range(min, max) {
      var _i, _ref, _ref1, _results;
      this.min = min;
      this.max = max;
      if (this.max == null) {
        this.max = this.min;
      }
      if (this.min != null) {
        this.array = (function() {
          _results = [];
          for (var _i = _ref = this.min, _ref1 = this.max; _ref <= _ref1 ? _i <= _ref1 : _i >= _ref1; _ref <= _ref1 ? _i++ : _i--){ _results.push(_i); }
          return _results;
        }).apply(this);
      } else {
        this.array = [];
      }
    }

    Range.prototype.contains = function(i) {
      return __indexOf.call(this.array, i) >= 0;
    };

    Range.prototype.union = function(range) {
      var max, min, result;
      min = range.min;
      if (this.min < min) {
        min = this.min;
      }
      max = range.max;
      if (this.max > max) {
        max = this.max;
      }
      result = new Range(min, max);
      result.array = this.array.concat(range.array);
      return result;
    };

    Range.prototype.toString = function() {
      if (this.min === this.max) {
        return "" + this.min;
      } else {
        return "" + this.min + "-" + this.max;
      }
    };

    return Range;

  })();

}).call(this);
